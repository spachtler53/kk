name: Discord Logo GIF

on:
  # Manual trigger with full customization
  workflow_dispatch:
    inputs:
      src_path:
        description: Path to source PNG inside repo (e.g., assets/logo.png)
        required: true
        default: assets/logo.png
      size:
        description: Square size in pixels
        required: true
        default: "512"
      frames:
        description: Frames per loop
        required: true
        default: "40"
      fps:
        description: Frames per second
        required: true
        default: "20"
      glow:
        description: Glow intensity preset
        required: true
        type: choice
        options: [dezent, medium, kraeftig]
        default: medium
      circle:
        description: Round transparent crop for Discord-style icon
        required: true
        type: choice
        options: ["true", "false"]
        default: "true"
      commit_to_repo:
        description: Commit generated GIF to assets/discord_logo.gif
        required: true
        type: choice
        options: ["true", "false"]
        default: "true"
  
  # Automatic triggers
  push:
    branches: [main, master]
    paths: 
      - 'assets/logo.png'
      - 'assets/*.png'
  
  # Weekly automatic generation (Sundays at 12:00 UTC)
  schedule:
    - cron: '0 12 * * 0'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install pillow

      - name: Set default parameters for automatic triggers
        id: defaults
        shell: bash
        run: |
          # Set defaults for automatic triggers (when no manual inputs)
          if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
            echo "SRC_PATH=assets/logo.png" >> $GITHUB_OUTPUT
            echo "SIZE=512" >> $GITHUB_OUTPUT
            echo "FRAMES=40" >> $GITHUB_OUTPUT
            echo "FPS=20" >> $GITHUB_OUTPUT
            echo "GLOW=medium" >> $GITHUB_OUTPUT
            echo "CIRCLE=true" >> $GITHUB_OUTPUT
            echo "COMMIT_TO_REPO=true" >> $GITHUB_OUTPUT
          else
            echo "SRC_PATH=${{ github.event.inputs.src_path }}" >> $GITHUB_OUTPUT
            echo "SIZE=${{ github.event.inputs.size }}" >> $GITHUB_OUTPUT
            echo "FRAMES=${{ github.event.inputs.frames }}" >> $GITHUB_OUTPUT
            echo "FPS=${{ github.event.inputs.fps }}" >> $GITHUB_OUTPUT
            echo "GLOW=${{ github.event.inputs.glow }}" >> $GITHUB_OUTPUT
            echo "CIRCLE=${{ github.event.inputs.circle }}" >> $GITHUB_OUTPUT
            echo "COMMIT_TO_REPO=${{ github.event.inputs.commit_to_repo }}" >> $GITHUB_OUTPUT
          fi

      - name: Resolve glow parameters
        id: params
        shell: bash
        run: |
          case "${{ steps.defaults.outputs.GLOW }}" in
            dezent)
              echo "PULSE_BRIGHT=0.28" >> $GITHUB_OUTPUT
              echo "PULSE_BLUR=6.0" >> $GITHUB_OUTPUT
              echo "MAX_ROTATE=1.0" >> $GITHUB_OUTPUT
              ;;
            medium)
              echo "PULSE_BRIGHT=0.38" >> $GITHUB_OUTPUT
              echo "PULSE_BLUR=7.0" >> $GITHUB_OUTPUT
              echo "MAX_ROTATE=1.5" >> $GITHUB_OUTPUT
              ;;
            kraeftig)
              echo "PULSE_BRIGHT=0.50" >> $GITHUB_OUTPUT
              echo "PULSE_BLUR=8.5" >> $GITHUB_OUTPUT
              echo "MAX_ROTATE=2.0" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Verify source exists
        run: |
          if [ ! -f "${{ steps.defaults.outputs.SRC_PATH }}" ]; then
            echo "::error::Source image not found at ${{ steps.defaults.outputs.SRC_PATH }}. Commit your PNG there and rerun this workflow." && exit 1
          fi

      - name: Build GIF
        run: |
          mkdir -p build
          python .github/workflows/scripts/glow_pulse.py \
            --in "${{ steps.defaults.outputs.SRC_PATH }}" \
            --out "build/discord_logo.gif" \
            --size "${{ steps.defaults.outputs.SIZE }}" \
            --frames "${{ steps.defaults.outputs.FRAMES }}" \
            --fps "${{ steps.defaults.outputs.FPS }}" \
            --pulse-bright "${{ steps.params.outputs.PULSE_BRIGHT }}" \
            --pulse-blur "${{ steps.params.outputs.PULSE_BLUR }}" \
            --max-rotate "${{ steps.params.outputs.MAX_ROTATE }}" \
            $([ "${{ steps.defaults.outputs.CIRCLE }}" = "true" ] && echo --keep-circle || true)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: discord-logo-gif
          path: build/discord_logo.gif
          retention-days: 30

      - name: Commit GIF back to repo
        if: ${{ steps.defaults.outputs.COMMIT_TO_REPO == 'true' }}
        run: |
          mkdir -p assets
          cp build/discord_logo.gif assets/discord_logo.gif
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add assets/discord_logo.gif
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            # Add info about trigger type to commit message
            if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
              git commit -m "Add generated Discord logo GIF (manual trigger)"
            elif [ "${{ github.event_name }}" = "push" ]; then
              git commit -m "Auto-generate Discord logo GIF (logo updated)"
            elif [ "${{ github.event_name }}" = "schedule" ]; then
              git commit -m "Auto-generate Discord logo GIF (scheduled)"
            else
              git commit -m "Add generated Discord logo GIF"
            fi
            git push
          fi
